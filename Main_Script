%%
%012358411 - Problem 2 Part B
%Lam, Richard 

clear; clc; close all; % Clears the workspace and command window.
%%
t0 = 0;
ti = 0.01;
tf = 10;
dt = 1E-2;

L = 0.5
T = 1.5

Kp = 1.2*(T/L); 
Ti = 2*L;
Td = 0.5*L;

Ki = Kp/Ti;
Kd = Kp*Td;

%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Call Simulink Block Diagram%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
open_system('P2P2.slx')
ansRAMP = sim('P2P2.slx');

%%
%%%%%%%%%%%%%%%%%%%%%
%Plot Control System%
%%%%%%%%%%%%%%%%%%%%%
hold all % This is so each plot is actually gets plotted instead of overriding each other. 

figure (1);
plot(ansRAMP.Disturbance(:,1),ansRAMP.Disturbance(:,2));
hold on;
plot(ansRAMP.Response_PID(:,1),ansRAMP.Response_PID(:,2));
hold on;
plot(ansRAMP.STEP(:,1),ansRAMP.STEP(:,2));
title('PID Controller Design');
xlabel('Time (s)');
ylabel('Amplitude');
legend('Open loop Response', 'PID Response', 'Step Function');

hold on;
figure (2); 
plot(ansRAMP.Disturbance(:,1),ansRAMP.Disturbance(:,2));
title('Open Looped Response');
xlabel('Time (s)');
ylabel('Amplitude');
legend('Open loop Response','Step Function');



%%
%%%%%%%%%%%%%%
%Observations%
%%%%%%%%%%%%%%
% The Ziegler-Nichols' first method is aboe to improve and track the given
% system.
% For design steps I estimated the T and L values visually.
%
% For the observations, the system reaches a steady state response at around
% 7 seconds. The open looped system does not track the step function.
%
% In conclusion, the response with the PID controller gives us the ability
% to track and make the system controllable.
